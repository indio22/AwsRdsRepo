{
    // Use IntelliSense to learn about possible Node.js debug attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
             {
            "name": "Start Debug",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/node_modules/serverless/bin/serverless",            
            "stopOnEntry": false,
            //"args": ["offline", "--port=8104", "-s", "test","--authorizer="],
            "args": ["offline", "--port=8104", "-s", "dev","--authorizer="],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--nolazy"
            ],
            "env": {
                // "NODE_ENV": "test"
               "NODE_ENV": "dev"
            }
        },
         {
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Run mocha",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
            "request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
            //"args": ["-d","-u", "bdd", "-R", "spec", "-t", "50000", "--recursive"],
             //"args": ["test\\lib\\helpers\\notifyErrorMessages.spec.js"],
            "args": ["-d","-u", "bdd", "-R", "spec", "-t", "500000", "--recursive"],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": "${workspaceRoot}",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Environment variables passed to the program.
			"env": { "NODE_ENV": "dev"}
		}
    ]
}